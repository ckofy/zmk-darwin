/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
  behaviors {
    skq: sticky_key_quick_release {
		compatible = "zmk,behavior-sticky-key";
		label = "STICKY_KEY_QUICK_RELEASE";
		#binding-cells = <1>;
		bindings = <&kp>;
		release-after-ms = <500>;
		quick-release;
    };
	pht: positional_hold_tap {
		compatible = "zmk,behavior-hold-tap";
		label = "POSITIONAL_HOLD_TAP";
		#binding-cells = <2>;
		flavor = "hold-preferred";
		tapping-term-ms = <200>;
		quick-tap-ms = <200>;
		bindings = <&kp>, <&kp>;
	};
  };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
	
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB   &kp Q  &kp W   &kp F  &kp P  &kp B     &kp J  &kp L  &kp U     &kp Y   &kp SEMI &kp BSPC
   &kp ESC   &kp A  &kp R   &kp S  &kp T  &kp G     &kp M  &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LSHFT &kp Z  &kp X   &kp C  &kp D  &kp V     &kp K  &kp H  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LCTRL &mo LWR   &kp SPACE     &skq LSHFT  &mo RSE &kp LALT
                        >;
                };
                lower_layer {
                        bindings = <
   &trans     &kp TAB   &trans    &kp LC(E) &kp CAPS  &kp LC(B)      &kp PG_UP &kp HOME  &kp UP    &kp END   &kp DEL  &trans
   &trans     &kp LGUI  &kp LALT  &kp LSHFT &kp LCTRL &kp LC(S)      &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp BSPC &trans
   &trans     &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &trans         &kp INS   &trans    &trans    &trans    &trans   &trans
                                  &trans    &trans    &trans         &kp RET   &trans    &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &trans &kp AMPS  &kp PRCNT &kp HASH   &kp LPAR  &kp EXCL          &kp ASTRK &kp RPAR  &kp AT    &kp DLLR  &kp CARET &trans
   &trans &kp N7    &kp N5    &kp N3     &kp N1    &kp N9            &kp N8    &kp N0    &kp N2    &kp N4    &kp N6    &trans
   &trans &kp GRAVE &kp LBKT  &kp RBKT   &kp UNDER &kp EQUAL         &kp PLUS  &kp MINUS &trans    &kp SQT   &kp BSLH  &trans
                              &trans     &trans    &trans            &trans    &trans    &trans
                        >;
                };
                adjust_layer {
                        bindings = <
   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6         &kp F7      &kp F8   &kp F9 &kp F10   &kp F11 &kp F12
   &out OUT_BLE &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans      &trans   &trans &trans    &trans  &out OUT_USB
   &bt BT_CLR   &trans       &trans       &trans       &trans       &bootloader    &bootloader &trans   &trans &trans    &trans  &trans
                                          &trans       &trans       &trans         &trans      &trans   &trans
                        >;
                };				
        };
};
